/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.team6;

import com.toedter.calendar.JMonthChooser;
import com.toedter.calendar.JYearChooser;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.io.File;
import java.io.FileWriter;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import javax.swing.JOptionPane;

/**
 *
 * @author timot
 */
public class WelcomeScreen extends javax.swing.JFrame {

    /**
     * Creates new form WelcomeScreen
     */
    public WelcomeScreen() {
        initComponents();
        jCalendar1.getDayChooser().addPropertyChangeListener("day", new PropertyChangeListener() {

            //gets the selected day when clicked
            @Override
            public void propertyChange(PropertyChangeEvent e) {
                System.out.println("Day Selected:");

                System.out.println(e.getPropertyName()
                        + ": " + e.getNewValue());
                selectedDate[1] = (e.getNewValue().toString());
            }
            //gets the selected month when clicked
        });
        JMonthChooser jmc = jCalendar1.getMonthChooser();
        jmc.addPropertyChangeListener("month", new PropertyChangeListener() {
            @Override
            public void propertyChange(PropertyChangeEvent e) {
                System.out.println(e.getPropertyName() + ": "
                        + String.format("%02d", ((Integer) e.getNewValue()).intValue() + 1));

                selectedDate[0] = (String.format("%02d", ((Integer) e.getNewValue()).intValue() + 1));
            }
        });
        JYearChooser jyc = jCalendar1.getYearChooser();
        jyc.addPropertyChangeListener("year", new PropertyChangeListener() {
            @Override
            public void propertyChange(PropertyChangeEvent e) {
                System.out.println(e.getPropertyName() + ": "
                        + String.format("%02d", ((Integer) e.getNewValue()).intValue() + 1));

                selectedDate[2] = (String.format("%02d", ((Integer) e.getNewValue()).intValue() + 1));
            }
        });
        addAppointmentFrame.setVisible(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addAppointmentFrame = new javax.swing.JFrame();
        jLabel3 = new javax.swing.JLabel();
        createAppointmentButtoin = new javax.swing.JButton();
        firstNamePat = new javax.swing.JLabel();
        lastNamePat = new javax.swing.JLabel();
        lastNamePat1 = new javax.swing.JLabel();
        apptDate = new javax.swing.JLabel();
        lastNamePat3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        appointmentDetails = new javax.swing.JTextArea();
        firstNameTextbox = new javax.swing.JTextField();
        lastNameTextbox = new javax.swing.JTextField();
        timeChoice = new java.awt.Choice();
        jFrame2 = new javax.swing.JFrame();
        modifyAppointmentFrame = new javax.swing.JFrame();
        jLabel5 = new javax.swing.JLabel();
        modifyAppointmentButton = new javax.swing.JButton();
        firstNamePat1 = new javax.swing.JLabel();
        lastNamePat2 = new javax.swing.JLabel();
        lastNamePat4 = new javax.swing.JLabel();
        lastNamePat5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        appointmentDetails1 = new javax.swing.JTextArea();
        firstNameTextbox1 = new javax.swing.JTextField();
        lastNameTextbox1 = new javax.swing.JTextField();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        timeChoice1 = new java.awt.Choice();
        jLabel1 = new javax.swing.JLabel();
        jCalendar1 = new com.toedter.calendar.JCalendar();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        addAppointment = new javax.swing.JButton();
        appointmentList = new java.awt.List();
        deleteAppointmentButton = new javax.swing.JButton();
        modifyAppt = new javax.swing.JButton();

        addAppointmentFrame.setTitle("Add Appointment");
        addAppointmentFrame.setAlwaysOnTop(true);
        addAppointmentFrame.setMinimumSize(new java.awt.Dimension(800, 600));
        addAppointmentFrame.setName("AddAppointmentFrame"); // NOI18N

        jLabel3.setFont(new java.awt.Font("sansserif", 0, 36)); // NOI18N
        jLabel3.setText("Add Appointment");

        createAppointmentButtoin.setText("Create Appointment");
        createAppointmentButtoin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createAppointmentButtoinActionPerformed(evt);
            }
        });

        firstNamePat.setText("First Name:");

        lastNamePat.setText("Last Name:");

        lastNamePat1.setText("Date Choosen:");

        apptDate.setText("Select Date");

        lastNamePat3.setText("Time:");

        jLabel4.setText("Appointment Details:");

        appointmentDetails.setColumns(20);
        appointmentDetails.setRows(5);
        jScrollPane2.setViewportView(appointmentDetails);

        lastNameTextbox.setToolTipText("");

        List<String> timelist = new ArrayList<>();
        timelist.add("0:00");
        timelist.add("0:15");
        timelist.add("0:30");
        timelist.add("0:45");
        timelist.add("01:00");
        timelist.add("01:15");
        timelist.add("01:30");
        timelist.add("01:45");
        timelist.add("02:00");
        timelist.add("02:15");
        timelist.add("02:30");
        timelist.add("02:45");
        timelist.add("03:00");
        timelist.add("03:15");
        timelist.add("03:30");
        timelist.add("03:45");
        timelist.add("04:00");
        timelist.add("04:15");
        timelist.add("04:30");
        timelist.add("04:45");
        timelist.add("05:00");
        timelist.add("05:15");
        timelist.add("05:30");
        timelist.add("05:45");
        timelist.add("06:00");
        timelist.add("06:15");
        timelist.add("06:30");
        timelist.add("06:45");
        timelist.add("07:00");
        timelist.add("07:15");
        timelist.add("07:30");
        timelist.add("07:45");
        timelist.add("08:00");
        timelist.add("08:15");
        timelist.add("08:30");
        timelist.add("08:45");
        timelist.add("09:00");
        timelist.add("09:15");
        timelist.add("09:30");
        timelist.add("09:45");
        timelist.add("10:00");
        timelist.add("10:15");
        timelist.add("10:30");
        timelist.add("10:45");
        timelist.add("11:00");
        timelist.add("11:15");
        timelist.add("11:30");
        timelist.add("11:45");
        timelist.add("12:00");
        timelist.add("12:15");
        timelist.add("12:30");
        timelist.add("12:45");
        timelist.add("13:00");
        timelist.add("13:15");
        timelist.add("13:30");
        timelist.add("13:45");
        timelist.add("14:00");
        timelist.add("14:15");
        timelist.add("14:30");
        timelist.add("14:45");
        timelist.add("15:00");
        timelist.add("15:15");
        timelist.add("15:30");
        timelist.add("15:45");
        timelist.add("16:00");
        timelist.add("16:15");
        timelist.add("16:30");
        timelist.add("16:45");
        timelist.add("17:00");
        timelist.add("17:15");
        timelist.add("17:30");
        timelist.add("17:45");
        timelist.add("18:00");
        timelist.add("18:15");
        timelist.add("18:30");
        timelist.add("18:45");
        timelist.add("19:00");
        timelist.add("19:15");
        timelist.add("19:30");
        timelist.add("19:45");
        timelist.add("20:00");
        timelist.add("20:15");
        timelist.add("20:30");
        timelist.add("20:45");
        timelist.add("21:00");
        timelist.add("21:15");
        timelist.add("21:30");
        timelist.add("21:45");
        timelist.add("22:00");
        timelist.add("22:15");
        timelist.add("22:30");
        timelist.add("22:45");
        timelist.add("23:00");
        timelist.add("23:15");
        timelist.add("23:30");
        timelist.add("23:45");
        for(int i = 0; i<timelist.size();i++)
        timeChoice.add(timelist.get(i));

        javax.swing.GroupLayout addAppointmentFrameLayout = new javax.swing.GroupLayout(addAppointmentFrame.getContentPane());
        addAppointmentFrame.getContentPane().setLayout(addAppointmentFrameLayout);
        addAppointmentFrameLayout.setHorizontalGroup(
            addAppointmentFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addAppointmentFrameLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(createAppointmentButtoin)
                .addGap(22, 22, 22))
            .addGroup(addAppointmentFrameLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(addAppointmentFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(addAppointmentFrameLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel3)
                    .addGroup(addAppointmentFrameLayout.createSequentialGroup()
                        .addComponent(lastNamePat1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(apptDate))
                    .addGroup(addAppointmentFrameLayout.createSequentialGroup()
                        .addComponent(lastNamePat3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(timeChoice, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(299, 299, 299))
                    .addGroup(addAppointmentFrameLayout.createSequentialGroup()
                        .addGroup(addAppointmentFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lastNamePat)
                            .addComponent(firstNamePat))
                        .addGap(18, 18, 18)
                        .addGroup(addAppointmentFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(firstNameTextbox)
                            .addComponent(lastNameTextbox))))
                .addContainerGap(623, Short.MAX_VALUE))
        );
        addAppointmentFrameLayout.setVerticalGroup(
            addAppointmentFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addAppointmentFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(addAppointmentFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(firstNamePat, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(firstNameTextbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addAppointmentFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lastNamePat, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lastNameTextbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addAppointmentFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lastNamePat1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(apptDate, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addAppointmentFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lastNamePat3, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(timeChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addAppointmentFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 190, Short.MAX_VALUE)
                .addComponent(createAppointmentButtoin)
                .addGap(14, 14, 14))
        );

        javax.swing.GroupLayout jFrame2Layout = new javax.swing.GroupLayout(jFrame2.getContentPane());
        jFrame2.getContentPane().setLayout(jFrame2Layout);
        jFrame2Layout.setHorizontalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame2Layout.setVerticalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        modifyAppointmentFrame.setTitle("Modify Appointment");
        modifyAppointmentFrame.setAlwaysOnTop(true);
        modifyAppointmentFrame.setMinimumSize(new java.awt.Dimension(800, 600));
        modifyAppointmentFrame.setName("ModifyAppointmentFrame");

        jLabel5.setFont(new java.awt.Font("sansserif", 0, 36)); // NOI18N
        jLabel5.setText("Modify Appointment");

        modifyAppointmentButton.setText("Modify Appointment");
        modifyAppointmentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyAppointmentButtonActionPerformed(evt);
            }
        });

        firstNamePat1.setText("First Name:");

        lastNamePat2.setText("Last Name:");

        lastNamePat4.setText("Date Choosen:");

        lastNamePat5.setText("Time:");

        jLabel6.setText("Appointment Details:");

        appointmentDetails1.setColumns(20);
        appointmentDetails1.setRows(5);
        jScrollPane3.setViewportView(appointmentDetails1);

        lastNameTextbox1.setToolTipText("");

        for(int i = 0; i<timelist.size();i++)
        timeChoice1.add(timelist.get(i));

        javax.swing.GroupLayout modifyAppointmentFrameLayout = new javax.swing.GroupLayout(modifyAppointmentFrame.getContentPane());
        modifyAppointmentFrame.getContentPane().setLayout(modifyAppointmentFrameLayout);
        modifyAppointmentFrameLayout.setHorizontalGroup(
            modifyAppointmentFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, modifyAppointmentFrameLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(modifyAppointmentButton)
                .addGap(22, 22, 22))
            .addGroup(modifyAppointmentFrameLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(modifyAppointmentFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, modifyAppointmentFrameLayout.createSequentialGroup()
                        .addComponent(firstNamePat1)
                        .addGap(18, 18, 18)
                        .addComponent(firstNameTextbox1))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, modifyAppointmentFrameLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(modifyAppointmentFrameLayout.createSequentialGroup()
                        .addComponent(lastNamePat2)
                        .addGap(18, 18, 18)
                        .addComponent(lastNameTextbox1))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, modifyAppointmentFrameLayout.createSequentialGroup()
                        .addComponent(lastNamePat4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, modifyAppointmentFrameLayout.createSequentialGroup()
                        .addComponent(lastNamePat5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(timeChoice1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(623, Short.MAX_VALUE))
        );
        modifyAppointmentFrameLayout.setVerticalGroup(
            modifyAppointmentFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(modifyAppointmentFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(modifyAppointmentFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(modifyAppointmentFrameLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addGroup(modifyAppointmentFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(firstNamePat1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(firstNameTextbox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(modifyAppointmentFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lastNamePat2, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lastNameTextbox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(lastNamePat4, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, modifyAppointmentFrameLayout.createSequentialGroup()
                        .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(modifyAppointmentFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lastNamePat5, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(timeChoice1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(modifyAppointmentFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 188, Short.MAX_VALUE)
                .addComponent(modifyAppointmentButton)
                .addGap(14, 14, 14))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Welcome!");
        jLabel1.setToolTipText("");

        jCalendar1.setDate(new java.util.Date(1650214797000L));
        jCalendar1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCalendar1MouseClicked(evt);
            }
        });

        jLabel2.setText("Upcoming Appointments:");

        addAppointment.setText("Add Appointment");
        addAppointment.setToolTipText("");
        addAppointment.setName("addAppointment"); // NOI18N
        addAppointment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addAppointmentActionPerformed(evt);
            }
        });

        appointmentList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                appointmentListActionPerformed(evt);
            }
        });

        deleteAppointmentButton.setText("Remove Appointment");
        deleteAppointmentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteAppointmentButtonActionPerformed(evt);
            }
        });

        modifyAppt.setText("Modify Appointment");
        modifyAppt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyApptActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jCalendar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(addAppointment))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 1169, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())))
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(appointmentList, javax.swing.GroupLayout.PREFERRED_SIZE, 592, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(deleteAppointmentButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(modifyAppt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addAppointment)
                    .addComponent(jCalendar1, javax.swing.GroupLayout.DEFAULT_SIZE, 404, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel2))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(appointmentList, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(deleteAppointmentButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(modifyAppt)))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        try {
            System.out.println("Reading appointments from: " + this.getDirectory());
            Scanner s = new Scanner(new File(this.getDirectory() + "\\appointments.txt"));
            //ArrayList<String> list = new ArrayList<String>();

            while (s.hasNextLine()) {
                appointmentList.add(s.nextLine());
                System.out.println("appointment read");
            }
            System.out.println("Appointment list import complete.");
            s.close();
        } catch (Exception e) {

        }

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addAppointmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addAppointmentActionPerformed
        // TODO add your handling code here:
        LocalDate currentdate = LocalDate.now();
        if (selectedDate[0] == null) {
            selectedDate[0] = currentdate.getMonthValue() + "";
        }

        if (selectedDate[1] == null) {
            selectedDate[1] = currentdate.getDayOfMonth() + "";
        }

        if (selectedDate[2] == null) {
            selectedDate[2] = currentdate.getYear() + "";
        }
        selectedDates = selectedDate[0] + ", " + selectedDate[1] + ", " + selectedDate[2];
        apptDate.setText(selectedDate[0] + ", " + selectedDate[1] + ", " + selectedDate[2]);
        addAppointmentFrame.setVisible(true);
    }//GEN-LAST:event_addAppointmentActionPerformed
    public String selectedDates;
    private void jCalendar1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCalendar1MouseClicked
        // TODO add your handling code here:


    }//GEN-LAST:event_jCalendar1MouseClicked
    private static String directory;

    public void setDirectory(String dir) {
        System.out.println("Setting data directory to: " + dir);
        this.directory = dir;
    }

    public String getDirectory() {
        return this.directory;
    }
    private void createAppointmentButtoinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createAppointmentButtoinActionPerformed
        // TODO add your handling code here:
        appointmentList.add("Name: " + firstNameTextbox.getText() + " " + lastNameTextbox.getText() + " Date: " + selectedDates + " Time: " + timeChoice.getSelectedItem() + " Notes: " + appointmentDetails.getText());
        addAppointmentFrame.setVisible(false);
        firstNameTextbox.setText("");
        lastNameTextbox.setText("");
        appointmentDetails.setText("");
        try {
            File myObj = new File(this.getDirectory() + "\\appointments.txt");
            if (myObj.delete()) {
                System.out.println("Deleted the file: " + myObj.getName());
            } else {
                System.out.println("Failed to delete the file.");
            }
            System.out.println("Directory writing appointments to: " + this.getDirectory());
            FileWriter writer = new FileWriter(this.getDirectory() + "\\appointments.txt");
            for (int i = 0; i < appointmentList.getItemCount(); i++) {
                writer.write(appointmentList.getItem(i) + System.lineSeparator());
            }
            writer.close();
        } catch (Exception e) {
            System.out.println("Exception writing appointments: " + e.toString());
        }
    }//GEN-LAST:event_createAppointmentButtoinActionPerformed

    private void appointmentListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_appointmentListActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_appointmentListActionPerformed

    private void deleteAppointmentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteAppointmentButtonActionPerformed
        // TODO add your handling code here:
        try {
            appointmentList.remove(appointmentList.getSelectedIndex());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "A valid appointment is not selected.");
        }

    }//GEN-LAST:event_deleteAppointmentButtonActionPerformed

    private void modifyAppointmentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyAppointmentButtonActionPerformed
        appointmentList.remove(appointmentList.getSelectedIndex());
        DateFormat fmt = new SimpleDateFormat("MM/dd/yyyy");
        String date = fmt.format(this.jDateChooser1.getDate());
        appointmentList.add(("Name: " + firstNameTextbox1.getText() + " " + lastNameTextbox1.getText() + " Date: " + date + " Time: " + timeChoice1.getSelectedItem()) + " Notes: " + appointmentDetails1.getText(), appointmentList.getSelectedIndex());

        modifyAppointmentFrame.setVisible(false);
        firstNameTextbox1.setText("");
        lastNameTextbox1.setText("");
        appointmentDetails1.setText("");
        try {
            File myObj = new File(this.getDirectory() + "\\appointments.txt");
            if (myObj.delete()) {
                System.out.println("Deleted the file: " + myObj.getName());
            } else {
                System.out.println("Failed to delete the file.");
            }
            System.out.println("Directory writing appointments to: " + this.getDirectory());
            FileWriter writer = new FileWriter(this.getDirectory() + "\\appointments.txt");
            for (int i = 0; i < appointmentList.getItemCount(); i++) {
                writer.write(appointmentList.getItem(i) + System.lineSeparator());
            }
            writer.close();
        } catch (Exception e) {
            System.out.println("Exception writing appointments: " + e.toString());
        }
    }//GEN-LAST:event_modifyAppointmentButtonActionPerformed

    private void modifyApptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyApptActionPerformed
        // TODO add your handling code here:
        try {
            LocalDate currentdate = LocalDate.now();
            if (selectedDate[0] == null) {
                selectedDate[0] = currentdate.getMonthValue() + "";
            }

            if (selectedDate[1] == null) {
                selectedDate[1] = currentdate.getDayOfMonth() + "";
            }

            if (selectedDate[2] == null) {
                selectedDate[2] = currentdate.getYear() + "";
            }

            lastNameTextbox1.setText("");
            appointmentDetails1.setText("");
            modifyAppointmentFrame.setVisible(true);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "A valid appointment is not selected.");
        }

    }//GEN-LAST:event_modifyApptActionPerformed

    /**
     * @param args the command line arguments
     */
    public void showWelcome() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WelcomeScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WelcomeScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WelcomeScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WelcomeScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new WelcomeScreen().setVisible(true);

            }
        });

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addAppointment;
    private javax.swing.JFrame addAppointmentFrame;
    private javax.swing.JTextArea appointmentDetails;
    private javax.swing.JTextArea appointmentDetails1;
    private java.awt.List appointmentList;
    private javax.swing.JLabel apptDate;
    private javax.swing.JButton createAppointmentButtoin;
    private javax.swing.JButton deleteAppointmentButton;
    private javax.swing.JLabel firstNamePat;
    private javax.swing.JLabel firstNamePat1;
    private javax.swing.JTextField firstNameTextbox;
    private javax.swing.JTextField firstNameTextbox1;
    private com.toedter.calendar.JCalendar jCalendar1;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JFrame jFrame2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lastNamePat;
    private javax.swing.JLabel lastNamePat1;
    private javax.swing.JLabel lastNamePat2;
    private javax.swing.JLabel lastNamePat3;
    private javax.swing.JLabel lastNamePat4;
    private javax.swing.JLabel lastNamePat5;
    private javax.swing.JTextField lastNameTextbox;
    private javax.swing.JTextField lastNameTextbox1;
    private javax.swing.JButton modifyAppointmentButton;
    private javax.swing.JFrame modifyAppointmentFrame;
    private javax.swing.JButton modifyAppt;
    private java.awt.Choice timeChoice;
    private java.awt.Choice timeChoice1;
    // End of variables declaration//GEN-END:variables
    private String[] selectedDate = new String[3];
}
